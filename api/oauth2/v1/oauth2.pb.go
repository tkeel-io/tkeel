//
//Copyright 2021 The tKeel Authors.
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/oauth2/v1/oauth2.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IssuePluginTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *IssuePluginTokenRequest) Reset() {
	*x = IssuePluginTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuePluginTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuePluginTokenRequest) ProtoMessage() {}

func (x *IssuePluginTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuePluginTokenRequest.ProtoReflect.Descriptor instead.
func (*IssuePluginTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth2_v1_oauth2_proto_rawDescGZIP(), []int{0}
}

func (x *IssuePluginTokenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *IssuePluginTokenRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type IssueTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType    string `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn    int32  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *IssueTokenResponse) Reset() {
	*x = IssueTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTokenResponse) ProtoMessage() {}

func (x *IssueTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueTokenResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth2_v1_oauth2_proto_rawDescGZIP(), []int{1}
}

func (x *IssueTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *IssueTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *IssueTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *IssueTokenResponse) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type AddPluginWhiteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginId string `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
}

func (x *AddPluginWhiteListRequest) Reset() {
	*x = AddPluginWhiteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPluginWhiteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPluginWhiteListRequest) ProtoMessage() {}

func (x *AddPluginWhiteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPluginWhiteListRequest.ProtoReflect.Descriptor instead.
func (*AddPluginWhiteListRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth2_v1_oauth2_proto_rawDescGZIP(), []int{2}
}

func (x *AddPluginWhiteListRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

type IssueAdminTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *IssueAdminTokenRequest) Reset() {
	*x = IssueAdminTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueAdminTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueAdminTokenRequest) ProtoMessage() {}

func (x *IssueAdminTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth2_v1_oauth2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueAdminTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueAdminTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth2_v1_oauth2_proto_rawDescGZIP(), []int{3}
}

func (x *IssueAdminTokenRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_api_oauth2_v1_oauth2_proto protoreflect.FileDescriptor

var file_api_oauth2_v1_oauth2_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0x92, 0x41, 0x18, 0x32, 0x16, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x20, 0x69, 0x64, 0x28, 0x64, 0x61, 0x70, 0x72, 0x20, 0x61, 0x70, 0x70, 0x20, 0x69,
	0x64, 0x29, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x12, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x32, 0x13, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x20,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92,
	0x41, 0x13, 0x32, 0x11, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x20, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x20, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x38, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x55, 0x0a, 0x19, 0x41, 0x64,
	0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0x92, 0x41, 0x18, 0x32,
	0x16, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x20, 0x69, 0x64, 0x28, 0x64, 0x61, 0x70, 0x72, 0x20,
	0x61, 0x70, 0x70, 0x20, 0x69, 0x64, 0x29, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x49, 0x0a, 0x16, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92,
	0x41, 0x10, 0x32, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0xba, 0x06, 0x0a,
	0x06, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x8f, 0x02, 0x0a, 0x10, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x22, 0x0e, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x92, 0x01, 0x0a, 0x06, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12,
	0x19, 0xe6, 0x8f, 0x92, 0xe4, 0xbb, 0xb6, 0x20, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0xe9, 0xa2,
	0x81, 0xe5, 0x8f, 0x91, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x2a, 0x10, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x0b, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x4a, 0x19, 0x0a, 0x03, 0x34, 0x30, 0x30,
	0x12, 0x12, 0x0a, 0x10, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d,
	0x41, 0x54, 0x43, 0x48, 0x4a, 0x1a, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x13, 0x0a, 0x11, 0x49,
	0x4e, 0x56, 0x41, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x49, 0x44,
	0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12, 0xa3, 0x02, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0xca, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0xa2, 0x01, 0x0a, 0x06, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x2a, 0xe6, 0xb7, 0xbb, 0xe5, 0x8a, 0xa0, 0x20, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x20, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x20, 0x64,
	0x61, 0x70, 0x72, 0x20, 0x41, 0x70, 0x70, 0x20, 0x49, 0x44, 0x20, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f,
	0xa3, 0x2a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x1c, 0x0a, 0x03, 0x32, 0x30, 0x34, 0x12, 0x15, 0x0a, 0x13,
	0x53, 0x55, 0x43, 0x43, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x4a, 0x21, 0x0a, 0x03, 0x34, 0x30, 0x39, 0x12, 0x1a, 0x0a, 0x18, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12,
	0xf7, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x92, 0x41, 0x80, 0x01, 0x0a, 0x06, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x12, 0x22, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5,
	0x91, 0x98, 0x20, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0xe9, 0xa2, 0x81, 0xe5, 0x8f, 0x91, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x2a, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a,
	0x02, 0x4f, 0x4b, 0x4a, 0x1b, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x14, 0x0a, 0x12, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48,
	0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x42, 0x3d, 0x0a, 0x0d, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69,
	0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_oauth2_v1_oauth2_proto_rawDescOnce sync.Once
	file_api_oauth2_v1_oauth2_proto_rawDescData = file_api_oauth2_v1_oauth2_proto_rawDesc
)

func file_api_oauth2_v1_oauth2_proto_rawDescGZIP() []byte {
	file_api_oauth2_v1_oauth2_proto_rawDescOnce.Do(func() {
		file_api_oauth2_v1_oauth2_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_oauth2_v1_oauth2_proto_rawDescData)
	})
	return file_api_oauth2_v1_oauth2_proto_rawDescData
}

var file_api_oauth2_v1_oauth2_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_oauth2_v1_oauth2_proto_goTypes = []interface{}{
	(*IssuePluginTokenRequest)(nil),   // 0: api.oauth2.v1.IssuePluginTokenRequest
	(*IssueTokenResponse)(nil),        // 1: api.oauth2.v1.IssueTokenResponse
	(*AddPluginWhiteListRequest)(nil), // 2: api.oauth2.v1.AddPluginWhiteListRequest
	(*IssueAdminTokenRequest)(nil),    // 3: api.oauth2.v1.IssueAdminTokenRequest
	(*emptypb.Empty)(nil),             // 4: google.protobuf.Empty
}
var file_api_oauth2_v1_oauth2_proto_depIdxs = []int32{
	0, // 0: api.oauth2.v1.Oauth2.IssuePluginToken:input_type -> api.oauth2.v1.IssuePluginTokenRequest
	2, // 1: api.oauth2.v1.Oauth2.AddPluginWhiteList:input_type -> api.oauth2.v1.AddPluginWhiteListRequest
	3, // 2: api.oauth2.v1.Oauth2.IssueAdminToken:input_type -> api.oauth2.v1.IssueAdminTokenRequest
	1, // 3: api.oauth2.v1.Oauth2.IssuePluginToken:output_type -> api.oauth2.v1.IssueTokenResponse
	4, // 4: api.oauth2.v1.Oauth2.AddPluginWhiteList:output_type -> google.protobuf.Empty
	1, // 5: api.oauth2.v1.Oauth2.IssueAdminToken:output_type -> api.oauth2.v1.IssueTokenResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_oauth2_v1_oauth2_proto_init() }
func file_api_oauth2_v1_oauth2_proto_init() {
	if File_api_oauth2_v1_oauth2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_oauth2_v1_oauth2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuePluginTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth2_v1_oauth2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth2_v1_oauth2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPluginWhiteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth2_v1_oauth2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueAdminTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_oauth2_v1_oauth2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_oauth2_v1_oauth2_proto_goTypes,
		DependencyIndexes: file_api_oauth2_v1_oauth2_proto_depIdxs,
		MessageInfos:      file_api_oauth2_v1_oauth2_proto_msgTypes,
	}.Build()
	File_api_oauth2_v1_oauth2_proto = out.File
	file_api_oauth2_v1_oauth2_proto_rawDesc = nil
	file_api_oauth2_v1_oauth2_proto_goTypes = nil
	file_api_oauth2_v1_oauth2_proto_depIdxs = nil
}
