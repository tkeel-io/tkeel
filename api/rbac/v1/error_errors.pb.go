// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	errors "github.com/tkeel-io/kit/errors"
	codes "google.golang.org/grpc/codes"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the ego package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

var errUnknown *errors.TError
var errInvalidArgument *errors.TError
var errInternalStore *errors.TError
var errInternalError *errors.TError
var errPermissionNotFound *errors.TError
var errRoleNotFound *errors.TError
var errRoleHasBeenExsist *errors.TError
var errUserNotFound *errors.TError
var errNotAllowedEdit *errors.TError
var errMustHaveOneBinding *errors.TError

func init() {
	errUnknown = errors.New(int(codes.Unknown), "io.tkeel.rudder.api.rbac.v1.ERR_UNKNOWN", "未知类型")
	errors.Register(errUnknown)
	errInvalidArgument = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.rbac.v1.ERR_INVALID_ARGUMENT", "请求参数无效")
	errors.Register(errInvalidArgument)
	errInternalStore = errors.New(int(codes.Internal), "io.tkeel.rudder.api.rbac.v1.ERR_INTERNAL_STORE", "请求后端存储错误")
	errors.Register(errInternalStore)
	errInternalError = errors.New(int(codes.Internal), "io.tkeel.rudder.api.rbac.v1.ERR_INTERNAL_ERROR", "内部错误")
	errors.Register(errInternalError)
	errPermissionNotFound = errors.New(int(codes.NotFound), "io.tkeel.rudder.api.rbac.v1.ERR_PERMISSION_NOT_FOUND", "权限不存在")
	errors.Register(errPermissionNotFound)
	errRoleNotFound = errors.New(int(codes.NotFound), "io.tkeel.rudder.api.rbac.v1.ERR_ROLE_NOT_FOUND", "角色不存在")
	errors.Register(errRoleNotFound)
	errRoleHasBeenExsist = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.rbac.v1.ERR_ROLE_HAS_BEEN_EXSIST", "角色已存在")
	errors.Register(errRoleHasBeenExsist)
	errUserNotFound = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.rbac.v1.ERR_USER_NOT_FOUND", "用户不存在")
	errors.Register(errUserNotFound)
	errNotAllowedEdit = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.rbac.v1.ERR_NOT_ALLOWED_EDIT", "角色不可修改")
	errors.Register(errNotAllowedEdit)
	errMustHaveOneBinding = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.rbac.v1.ERR_MUST_HAVE_ONE_BINDING", "角色必须拥有至少一个绑定")
	errors.Register(errMustHaveOneBinding)
}

func ErrUnknown() errors.Error {
	return errUnknown
}

func ErrInvalidArgument() errors.Error {
	return errInvalidArgument
}

func ErrInternalStore() errors.Error {
	return errInternalStore
}

func ErrInternalError() errors.Error {
	return errInternalError
}

func ErrPermissionNotFound() errors.Error {
	return errPermissionNotFound
}

func ErrRoleNotFound() errors.Error {
	return errRoleNotFound
}

func ErrRoleHasBeenExsist() errors.Error {
	return errRoleHasBeenExsist
}

func ErrUserNotFound() errors.Error {
	return errUserNotFound
}

func ErrNotAllowedEdit() errors.Error {
	return errNotAllowedEdit
}

func ErrMustHaveOneBinding() errors.Error {
	return errMustHaveOneBinding
}
