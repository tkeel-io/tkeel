/*
Copyright 2021 The tKeel Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package io.tkeel.rudder.api.rbac.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "openapi/v1/openapi.proto";

option go_package = "github.com/tkeel-io/tkeel/api/rbac/v1;v1";
option java_multiple_files = true;
option java_package = "io.tkeel.rudder.api.rbac.v1";

service RBAC {
  rpc CreateRoles(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post : "/rbac/roles"
      body : "role"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "create role in tenant "
      operation_id : "CreateRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc ListRole(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get : "/rbac/roles"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "list role in tenant "
      operation_id : "ListRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
    option (google.api.http) = {
      get : "/rbac/roles/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "Get role in tenant "
      operation_id : "GetRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {
    option (google.api.http) = {
      delete : "/rbac/roles/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "delete role in tenant "
      operation_id : "DeleteRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
    option (google.api.http) = {
      put : "/rbac/roles/{id}"
      body : "role"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "update role in tenant "
      operation_id : "UpdateRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc UpdateUserRoleBinding(UpdateUserRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/rbac/users/{user_id}/roles"
      body : "role_id_list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "create binding to bind user_id with roles"
      operation_id : "UpdateUserRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc CreateRoleBinding(CreateRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/rbac/roles/{role_id}/users"
      body : "users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "create binding to bind role_id with user_id"
      operation_id : "CreateRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc DeleteRoleBinding(DeleteRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/rbac/roles/{role_id}/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "delete binding of the bind role_name with user_id"
      operation_id : "DeleteRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc ListPermissions(ListPermissionRequest) returns (ListPermissionResponse) {
    option (google.api.http) = {
      get : "/rbac/permissions"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "list permissions "
      operation_id : "ListPermissions"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc CheckRolePermission(CheckRolePermissionRequest)
      returns (CheckRolePermissionResponse) {
    option (google.api.http) = {
      post : "/rbac/permissions/check"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "check role has the permission"
      operation_id : "CheckRolePermission"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMAddPolicy(TMPolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/policy"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM add policy"
      operation_id : "TMAddPolicy"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMDeletePolicy(TMPolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/policy/delete"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM delete policy"
      operation_id : "TMDeletePolicy"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMAddRoleBinding(TMRoleBindingRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/binding"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM add policy"
      operation_id : "TMAddRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMDeleteRoleBinding(TMRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/binding/delete"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM delete policy"
      operation_id : "TMDeleteRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
}

message TMPolicyRequest {
  string role = 1;
  string tenant = 2;
  string permission = 3;
}

message TMRoleBindingRequest {
  string user = 1;
  string role = 2;
  string tenant = 3;
}

message Permission {
  string path = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission path"
      } ];
  openapi.v1.Permission permission = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission"
      } ];
}

message Role {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role id"
      } ]; // tenant role name.
  string name = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role name"
      } ]; // tenant role name.
  string desc = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "role desc"
      } ];
  int32 bind_num = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "role bind user number"
      } ];
  uint64 upsert_timestamp = 5
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "role upsert timestamp"
      } ];
  repeated Permission permission_list = 6
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission path list"
      } ];
}

message CreateRoleRequest {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message CreateRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message GetRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role id"
      } ];
}

message GetRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message DeleteRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role id"
      } ];
}

message DeleteRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message UpdateRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role id"
      } ];
  Role role = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message UpdateRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role"
      } ];
}

message ListRolesRequest {
  int32 page_num = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query page number"
      } ];
  int32 page_size = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query page size"
      } ];
  string order_by = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query items order by field"
      } ];
  bool is_descending = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query items inverted sort"
      } ];
  string key_words = 5
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query items key"
      } ];
  string tenant_id = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id, default is current tenant"
      } ];
}

message ListRolesResponse {
  int32 page_num = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query page number"
      } ];
  int32 page_size = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query page size"
      } ];
  int32 total = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "query item total"
      } ];
  repeated Role roles = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "roles"
      } ];
  string tenant_id = 11
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id, default is current tenant"
      } ];
}

message CreateRoleBindingRequest {
  string role_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "bind role name"
      } ];
  message UserList {
    repeated string id = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description : "bind user id"
        } ];
  }
  UserList users = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "bind user id"
      } ];
}

message DeleteRoleBindingRequest {
  string role_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "bind role id"
      } ];
  string user_id = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "bind user id"
      } ];
}

message ListPermissionRequest {
  string key_words = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission name search words"
      } ]; // permission name search words.
  string role = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant role name,default is current role"
      } ]; // tenant role name.
}
message ListPermissionResponse {
  repeated Permission permissions = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "role permissions"
      } ];
}

message CheckRolePermissionRequest {
  string path = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission path"
      } ];
}

message CheckRolePermissionResponse {
  bool allowed = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "permission allowed"
      } ];
}

message UpdateUserRoleBindingRequest {
  string user_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "binding user id"
      } ];
  message RoleIDList {
    repeated string roles = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description : "binding roles"
        } ];
  }
  RoleIDList role_id_list = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "binding role id list"
      } ];
}