// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/repo/v1/repo.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigurationSchemaType int32

const (
	ConfigurationSchemaType_JSON ConfigurationSchemaType = 0
	ConfigurationSchemaType_YAML ConfigurationSchemaType = 1
)

// Enum value maps for ConfigurationSchemaType.
var (
	ConfigurationSchemaType_name = map[int32]string{
		0: "JSON",
		1: "YAML",
	}
	ConfigurationSchemaType_value = map[string]int32{
		"JSON": 0,
		"YAML": 1,
	}
)

func (x ConfigurationSchemaType) Enum() *ConfigurationSchemaType {
	p := new(ConfigurationSchemaType)
	*p = x
	return p
}

func (x ConfigurationSchemaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigurationSchemaType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_repo_v1_repo_proto_enumTypes[0].Descriptor()
}

func (ConfigurationSchemaType) Type() protoreflect.EnumType {
	return &file_api_repo_v1_repo_proto_enumTypes[0]
}

func (x ConfigurationSchemaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigurationSchemaType.Descriptor instead.
func (ConfigurationSchemaType) EnumDescriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{0}
}

type RepoObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url         string                `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Annotations map[string]*anypb.Any `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RepoObject) Reset() {
	*x = RepoObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoObject) ProtoMessage() {}

func (x *RepoObject) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoObject.ProtoReflect.Descriptor instead.
func (*RepoObject) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{0}
}

func (x *RepoObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepoObject) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RepoObject) GetAnnotations() map[string]*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type InstallerObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version             string                  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Repo                string                  `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Annotations         map[string]*anypb.Any   `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Readme              []byte                  `protobuf:"bytes,5,opt,name=readme,proto3" json:"readme,omitempty"`
	ConfigurationSchema []byte                  `protobuf:"bytes,6,opt,name=configuration_schema,json=configurationSchema,proto3" json:"configuration_schema,omitempty"`
	SchemaType          ConfigurationSchemaType `protobuf:"varint,7,opt,name=schema_type,json=schemaType,proto3,enum=api.repo.v1.ConfigurationSchemaType" json:"schema_type,omitempty"`
	Configuration       []byte                  `protobuf:"bytes,8,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Installed           bool                    `protobuf:"varint,9,opt,name=installed,proto3" json:"installed,omitempty"`
}

func (x *InstallerObject) Reset() {
	*x = InstallerObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallerObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallerObject) ProtoMessage() {}

func (x *InstallerObject) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallerObject.ProtoReflect.Descriptor instead.
func (*InstallerObject) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{1}
}

func (x *InstallerObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallerObject) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallerObject) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *InstallerObject) GetAnnotations() map[string]*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *InstallerObject) GetReadme() []byte {
	if x != nil {
		return x.Readme
	}
	return nil
}

func (x *InstallerObject) GetConfigurationSchema() []byte {
	if x != nil {
		return x.ConfigurationSchema
	}
	return nil
}

func (x *InstallerObject) GetSchemaType() ConfigurationSchemaType {
	if x != nil {
		return x.SchemaType
	}
	return ConfigurationSchemaType_JSON
}

func (x *InstallerObject) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InstallerObject) GetInstalled() bool {
	if x != nil {
		return x.Installed
	}
	return false
}

type CreateRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreateRepoRequest) Reset() {
	*x = CreateRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepoRequest) ProtoMessage() {}

func (x *CreateRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepoRequest.ProtoReflect.Descriptor instead.
func (*CreateRepoRequest) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRepoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo *RepoObject `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *CreateRepoResponse) Reset() {
	*x = CreateRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepoResponse) ProtoMessage() {}

func (x *CreateRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepoResponse.ProtoReflect.Descriptor instead.
func (*CreateRepoResponse) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRepoResponse) GetRepo() *RepoObject {
	if x != nil {
		return x.Repo
	}
	return nil
}

type DeleteRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRepoRequest) Reset() {
	*x = DeleteRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepoRequest) ProtoMessage() {}

func (x *DeleteRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepoRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepoRequest) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo *RepoObject `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *DeleteRepoResponse) Reset() {
	*x = DeleteRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepoResponse) ProtoMessage() {}

func (x *DeleteRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepoResponse.ProtoReflect.Descriptor instead.
func (*DeleteRepoResponse) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRepoResponse) GetRepo() *RepoObject {
	if x != nil {
		return x.Repo
	}
	return nil
}

type ListRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repos []*RepoObject `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *ListRepoResponse) Reset() {
	*x = ListRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoResponse) ProtoMessage() {}

func (x *ListRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoResponse.ProtoReflect.Descriptor instead.
func (*ListRepoResponse) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{6}
}

func (x *ListRepoResponse) GetRepos() []*RepoObject {
	if x != nil {
		return x.Repos
	}
	return nil
}

type ListRepoInstallerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *ListRepoInstallerRequest) Reset() {
	*x = ListRepoInstallerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepoInstallerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoInstallerRequest) ProtoMessage() {}

func (x *ListRepoInstallerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoInstallerRequest.ProtoReflect.Descriptor instead.
func (*ListRepoInstallerRequest) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{7}
}

func (x *ListRepoInstallerRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type ListRepoInstallerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BriefInstallers []*InstallerObject `protobuf:"bytes,1,rep,name=brief_installers,json=briefInstallers,proto3" json:"brief_installers,omitempty"`
}

func (x *ListRepoInstallerResponse) Reset() {
	*x = ListRepoInstallerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepoInstallerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoInstallerResponse) ProtoMessage() {}

func (x *ListRepoInstallerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoInstallerResponse.ProtoReflect.Descriptor instead.
func (*ListRepoInstallerResponse) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{8}
}

func (x *ListRepoInstallerResponse) GetBriefInstallers() []*InstallerObject {
	if x != nil {
		return x.BriefInstallers
	}
	return nil
}

type GetRepoInstallerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo             string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	InstallerName    string `protobuf:"bytes,2,opt,name=installer_name,json=installerName,proto3" json:"installer_name,omitempty"`
	InstallerVersion string `protobuf:"bytes,3,opt,name=installer_version,json=installerVersion,proto3" json:"installer_version,omitempty"`
}

func (x *GetRepoInstallerRequest) Reset() {
	*x = GetRepoInstallerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepoInstallerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoInstallerRequest) ProtoMessage() {}

func (x *GetRepoInstallerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoInstallerRequest.ProtoReflect.Descriptor instead.
func (*GetRepoInstallerRequest) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{9}
}

func (x *GetRepoInstallerRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GetRepoInstallerRequest) GetInstallerName() string {
	if x != nil {
		return x.InstallerName
	}
	return ""
}

func (x *GetRepoInstallerRequest) GetInstallerVersion() string {
	if x != nil {
		return x.InstallerVersion
	}
	return ""
}

type GetRepoInstallerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Installer *InstallerObject `protobuf:"bytes,1,opt,name=installer,proto3" json:"installer,omitempty"`
}

func (x *GetRepoInstallerResponse) Reset() {
	*x = GetRepoInstallerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_repo_v1_repo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepoInstallerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoInstallerResponse) ProtoMessage() {}

func (x *GetRepoInstallerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_repo_v1_repo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoInstallerResponse.ProtoReflect.Descriptor instead.
func (*GetRepoInstallerResponse) Descriptor() ([]byte, []int) {
	return file_api_repo_v1_repo_proto_rawDescGZIP(), []int{10}
}

func (x *GetRepoInstallerResponse) GetInstaller() *InstallerObject {
	if x != nil {
		return x.Installer
	}
	return nil
}

var File_api_repo_v1_repo_proto protoreflect.FileDescriptor

var file_api_repo_v1_repo_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x72,
	0x65, 0x70, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x20, 0x75, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x61, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x15,
	0x92, 0x41, 0x12, 0x32, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x20, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x54, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x05, 0x0a, 0x0f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32,
	0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x12, 0x66, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x15, 0x92, 0x41, 0x12, 0x32, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x20,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x6d, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x65, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x09, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x2d,
	0x92, 0x41, 0x2a, 0x32, 0x28, 0x77, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62,
	0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x09, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x54, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x58,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x20,
	0x75, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x4c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x09, 0x92, 0x41, 0x06, 0x32, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x22, 0x37, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09,
	0x72, 0x65, 0x70, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x09, 0x92, 0x41,
	0x06, 0x32, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x22, 0x51, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09,
	0x72, 0x65, 0x70, 0x6f, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x22, 0x3e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x22, 0x9f, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81,
	0x01, 0x0a, 0x10, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x33, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x2c, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x68, 0x61, 0x73,
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41,
	0x0b, 0x32, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x12, 0x3a, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32,
	0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43,
	0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2a, 0x2d, 0x0a, 0x17, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x01, 0x32, 0xa9, 0x0a, 0x0a, 0x04, 0x52,
	0x65, 0x70, 0x6f, 0x12, 0xe7, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xa0, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x22, 0x0d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x3a, 0x03, 0x75, 0x72, 0x6c, 0x92, 0x41, 0x82, 0x01, 0x0a, 0x04, 0x52, 0x65, 0x70,
	0x6f, 0x12, 0x12, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe4, 0xbb, 0x93, 0xe5, 0xba, 0x93, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x2a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x4a, 0x0d, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x06, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43,
	0x4a, 0x19, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x4a, 0x17, 0x0a, 0x03, 0x34,
	0x30, 0x39, 0x12, 0x10, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12, 0xeb, 0x01,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x92, 0x41, 0x82, 0x01, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12,
	0x12, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe4, 0xbb, 0x93, 0xe5, 0xba, 0x93, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0x2a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x4a,
	0x0d, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x06, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x4a, 0x19,
	0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x4a, 0x17, 0x0a, 0x03, 0x34, 0x30, 0x34,
	0x12, 0x10, 0x0a, 0x0e, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12, 0xc1, 0x01, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x7e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x92,
	0x41, 0x6d, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe4, 0xbb, 0x93, 0xe5, 0xba, 0x93, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x2a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x4a, 0x0d, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x06, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x4a, 0x19, 0x0a, 0x03, 0x34,
	0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52,
	0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x4a, 0x17, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12,
	0xa4, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x7d, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x92, 0x41, 0x9b, 0x01, 0x0a, 0x04, 0x52, 0x65, 0x70,
	0x6f, 0x12, 0x24, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe4, 0xbb, 0x93, 0xe5, 0xba, 0x93, 0xe4,
	0xb8, 0xad, 0xe5, 0xae, 0x89, 0xe8, 0xa3, 0x85, 0xe5, 0x8c, 0x85, 0xe5, 0x88, 0x97, 0xe8, 0xa1,
	0xa8, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x2a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4a, 0x0d, 0x0a, 0x03, 0x32, 0x30,
	0x30, 0x12, 0x06, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x4a, 0x19, 0x0a, 0x03, 0x34, 0x30, 0x30,
	0x12, 0x12, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x4a, 0x17, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x10, 0x0a, 0x0e, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x4a, 0x17, 0x0a,
	0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x12, 0xdd, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3f, 0x12, 0x3d, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x7d,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x7b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d,
	0x92, 0x41, 0xb2, 0x01, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0xe8, 0x8e, 0xb7, 0xe5,
	0x8f, 0x96, 0xe4, 0xbb, 0x93, 0xe5, 0xba, 0x93, 0xe4, 0xb8, 0xad, 0xe6, 0x8c, 0x87, 0xe5, 0xae,
	0x9a, 0xe5, 0xae, 0x89, 0xe8, 0xa3, 0x85, 0xe5, 0x8c, 0x85, 0x2a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4a, 0x0d, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x06, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x4a, 0x19, 0x0a, 0x03, 0x34,
	0x30, 0x30, 0x12, 0x12, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52,
	0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x4a, 0x17, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x10, 0x0a,
	0x0e, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x4a,
	0x1c, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x15, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c,
	0x4c, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x4a, 0x17, 0x0a,
	0x03, 0x35, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x42, 0x39, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x6b, 0x65,
	0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_repo_v1_repo_proto_rawDescOnce sync.Once
	file_api_repo_v1_repo_proto_rawDescData = file_api_repo_v1_repo_proto_rawDesc
)

func file_api_repo_v1_repo_proto_rawDescGZIP() []byte {
	file_api_repo_v1_repo_proto_rawDescOnce.Do(func() {
		file_api_repo_v1_repo_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_repo_v1_repo_proto_rawDescData)
	})
	return file_api_repo_v1_repo_proto_rawDescData
}

var file_api_repo_v1_repo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_repo_v1_repo_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_repo_v1_repo_proto_goTypes = []interface{}{
	(ConfigurationSchemaType)(0),      // 0: api.repo.v1.ConfigurationSchemaType
	(*RepoObject)(nil),                // 1: api.repo.v1.RepoObject
	(*InstallerObject)(nil),           // 2: api.repo.v1.InstallerObject
	(*CreateRepoRequest)(nil),         // 3: api.repo.v1.CreateRepoRequest
	(*CreateRepoResponse)(nil),        // 4: api.repo.v1.CreateRepoResponse
	(*DeleteRepoRequest)(nil),         // 5: api.repo.v1.DeleteRepoRequest
	(*DeleteRepoResponse)(nil),        // 6: api.repo.v1.DeleteRepoResponse
	(*ListRepoResponse)(nil),          // 7: api.repo.v1.ListRepoResponse
	(*ListRepoInstallerRequest)(nil),  // 8: api.repo.v1.ListRepoInstallerRequest
	(*ListRepoInstallerResponse)(nil), // 9: api.repo.v1.ListRepoInstallerResponse
	(*GetRepoInstallerRequest)(nil),   // 10: api.repo.v1.GetRepoInstallerRequest
	(*GetRepoInstallerResponse)(nil),  // 11: api.repo.v1.GetRepoInstallerResponse
	nil,                               // 12: api.repo.v1.RepoObject.AnnotationsEntry
	nil,                               // 13: api.repo.v1.InstallerObject.AnnotationsEntry
	(*anypb.Any)(nil),                 // 14: google.protobuf.Any
	(*emptypb.Empty)(nil),             // 15: google.protobuf.Empty
}
var file_api_repo_v1_repo_proto_depIdxs = []int32{
	12, // 0: api.repo.v1.RepoObject.annotations:type_name -> api.repo.v1.RepoObject.AnnotationsEntry
	13, // 1: api.repo.v1.InstallerObject.annotations:type_name -> api.repo.v1.InstallerObject.AnnotationsEntry
	0,  // 2: api.repo.v1.InstallerObject.schema_type:type_name -> api.repo.v1.ConfigurationSchemaType
	1,  // 3: api.repo.v1.CreateRepoResponse.repo:type_name -> api.repo.v1.RepoObject
	1,  // 4: api.repo.v1.DeleteRepoResponse.repo:type_name -> api.repo.v1.RepoObject
	1,  // 5: api.repo.v1.ListRepoResponse.repos:type_name -> api.repo.v1.RepoObject
	2,  // 6: api.repo.v1.ListRepoInstallerResponse.brief_installers:type_name -> api.repo.v1.InstallerObject
	2,  // 7: api.repo.v1.GetRepoInstallerResponse.installer:type_name -> api.repo.v1.InstallerObject
	14, // 8: api.repo.v1.RepoObject.AnnotationsEntry.value:type_name -> google.protobuf.Any
	14, // 9: api.repo.v1.InstallerObject.AnnotationsEntry.value:type_name -> google.protobuf.Any
	3,  // 10: api.repo.v1.Repo.CreateRepo:input_type -> api.repo.v1.CreateRepoRequest
	5,  // 11: api.repo.v1.Repo.DeleteRepo:input_type -> api.repo.v1.DeleteRepoRequest
	15, // 12: api.repo.v1.Repo.ListRepo:input_type -> google.protobuf.Empty
	8,  // 13: api.repo.v1.Repo.ListRepoInstaller:input_type -> api.repo.v1.ListRepoInstallerRequest
	10, // 14: api.repo.v1.Repo.GetRepoInstaller:input_type -> api.repo.v1.GetRepoInstallerRequest
	15, // 15: api.repo.v1.Repo.CreateRepo:output_type -> google.protobuf.Empty
	6,  // 16: api.repo.v1.Repo.DeleteRepo:output_type -> api.repo.v1.DeleteRepoResponse
	7,  // 17: api.repo.v1.Repo.ListRepo:output_type -> api.repo.v1.ListRepoResponse
	9,  // 18: api.repo.v1.Repo.ListRepoInstaller:output_type -> api.repo.v1.ListRepoInstallerResponse
	11, // 19: api.repo.v1.Repo.GetRepoInstaller:output_type -> api.repo.v1.GetRepoInstallerResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_repo_v1_repo_proto_init() }
func file_api_repo_v1_repo_proto_init() {
	if File_api_repo_v1_repo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_repo_v1_repo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallerObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepoInstallerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepoInstallerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepoInstallerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_repo_v1_repo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepoInstallerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_repo_v1_repo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_repo_v1_repo_proto_goTypes,
		DependencyIndexes: file_api_repo_v1_repo_proto_depIdxs,
		EnumInfos:         file_api_repo_v1_repo_proto_enumTypes,
		MessageInfos:      file_api_repo_v1_repo_proto_msgTypes,
	}.Build()
	File_api_repo_v1_repo_proto = out.File
	file_api_repo_v1_repo_proto_rawDesc = nil
	file_api_repo_v1_repo_proto_goTypes = nil
	file_api_repo_v1_repo_proto_depIdxs = nil
}
