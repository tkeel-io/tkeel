/*
Copyright 2021 The tKeel Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package io.tkeel.security.api.tenant.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel/api/tenant/v1;v1";
option java_multiple_files = true;
option java_package = "io.tkeel.security.api.tenant.v1";

// The greeting service definition.
service Tenant {
  // create a tenant.
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
    option (google.api.http) = {
      post : "/tenants"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "create a tenant"
      operation_id : "CreateTenant"
      tags : "[Security] Tenant"
      responses : [
        {
          key : "200"
          value : {description : "OK"}
        },
        {
          key : "400"
          value : {description : "INVALID_ARGUMENT"}
        },
        {
          key : "409"
          value : {description : "ALREADY_EXISTS"}
        },
        {
          key : "500"
          value : {description : "UNEXPECT_INTERNAL"}
        }
      ]
    };
  }

  // get a tenant.
  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "get a tenant"
      operation_id : "GetTenant"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list tenant.
  rpc ListTenant(ListTenantRequest) returns (ListTenantResponse) {
    option (google.api.http) = {
      get : "/tenants"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "tenant list"
      operation_id : "ListTenant"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // update tenant.
  rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse) {
    option (google.api.http) = {
      put : "/tenants/{tenant_id}"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "tenant update"
      operation_id : "UpdateTenant"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete a tenant.
  rpc DeleteTenant(DeleteTenantRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "delete a tenant"
      operation_id : "DeleteTenant"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // create a user.
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post : "/tenants/{tenant_id}/users"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "create a  user at tenant"
      operation_id : "CreateUser"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  //  get user.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "get a  user"
      operation_id : "GetUser"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list user.
  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "list users"
      operation_id : "ListUser"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete a user.
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}/users/{user_id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "delete a user"
      operation_id : "DeleteUser"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  // update user
  rpc UpdateUser(UpdateUserRequest)returns(UpdateUserResponse){
    option (google.api.http) = {
      put : "/tenants/{tenant_id}/users/{user_id}"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "update user"
      operation_id : "UpdateUser"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };

  }

  // add a plugin
  rpc AddTenantPlugin(AddTenantPluginRequest)
      returns (AddTenantPluginResponse) {
    option (google.api.http) = {
      post : "/tenants/{tenant_id}/plugins"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "add a plugin"
      operation_id : "AddPlugin"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list plugin
  rpc ListTenantPlugin(ListTenantPluginRequest)
      returns (ListTenantPluginResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/plugins"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "list tenant plugin"
      operation_id : "ListTenantPlugin"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete plugin
  rpc DeleteTenantPlugin(DeleteTenantPluginRequest)
      returns (DeleteTenantPluginResponse) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}/plugins/{plugin_id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "delete tenant plugin"
      operation_id : "DeleteTenantPlugin"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc TenantPluginPermissible(PluginPermissibleRequest)
      returns (PluginPermissibleResponse) {
    option (google.api.http) = {
      get : "/tenants/plugins/permissible"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "permissible tenant plugin"
      operation_id : "PermissibleTenantPlugin"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  rpc GetResetPasswordKey(GetResetPasswordKeyRequest)
      returns (GetResetPasswordKeyResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users/{user_id}/rpk"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "get reset user password key "
      operation_id : "GetResetPasswordKey"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  rpc ResetPasswordKeyInfo(RPKInfoRequest)
      returns (RPKInfoResponse) {
    option (google.api.http) = {
      post : "/tenants/users/rpk/info"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "get reset user password key info"
      operation_id : "ResetPasswordKeyInfo"
      tags : "[Security] Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }
}

// The request message.
message CreateTenantRequest {
  TenantCreateBody body = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "create tenant body params"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message TenantCreateBody {
  string title = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "tenant title"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string remark = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "tenant remark"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "tenant id"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  TenantAdmin admin = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "set tenant admin"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

message TenantAdmin {
  string username = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : " Tenant Admin username "
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string password = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : " Tenant Admin password "
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// The response message containing the greetings
message CreateTenantResponse {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "created tenant id"
      } ];
  string tenant_title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "created tenant title"
      } ];
  string admin_username = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "created tenant admin username"
      } ];
  string reset_key =4
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : " tenant admin password reset key"
  } ];
}

message GetTenantRequest {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id"
      } ];
}
message GetTenantResponse {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id"
      } ];
  string title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant title"
      } ];
  string remark = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant remark"
      } ];
  int64 created_at = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant remark"
      } ];
  int32 num_user = 5
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "user number in tenant"
  } ];
  repeated TenantAdmin admins = 6
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "admins in tenant"
  } ];
}
message ListTenantRequest {
  int32 page_num = 1;
  int32 page_size = 2;
  string order_by = 3;
  bool is_descending = 4;
  string key_words =5;
}

message ListTenantResponse {
  int32 total = 1;
  int32 page_num = 2;
  int32 page_size = 3;
  repeated TenantDetail tenants = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenants"
      } ];
}


message TenantDetail {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id"
      } ];
  string title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id"
      } ];
  string remark = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant remark"
      } ];
  int32 num_user = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "user number in tenant"
      } ];
  int64 created_at =5
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "user number in tenant"
  } ];
  repeated string roles =6
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "user roles in tenant"
  } ];
  repeated TenantAdmin admins = 7
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "admins in tenant"
  } ];
}

message UpdateTenantRequest {
  string tenant_id = 1;
  UpdateTenantBody body =2;

}
 message UpdateTenantBody {
  string title =1;
  string remark =2;
 }
message UpdateTenantResponse{

}

message DeleteTenantRequest {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "tenant id"
      } ];
}

// user
message CreateUserRequest {
  string tenant_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "tenant id"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  CreateUserBody body = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "create user body params"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateUserBody {
  string username = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "user name"
    },
    (google.api.field_behavior) = REQUIRED
  ];

  string password = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "user password"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  repeated string roles = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "user roles"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string nick_name =4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "user nick name"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

message CreateUserResponse {
  string tenant_id = 1;
  string user_id = 2;
  string username = 3;
  // reset password key
  string reset_key =4;
}

message GetUserRequest {
  string tenant_id = 1;
  string user_id = 2;
}

message GetUserResponse {
  string tenant_id = 1;
  string user_id = 2;
  string external_id = 3;
  string username = 4;
  string email = 5;
  string nick_name = 6;
  string avatar = 7;
}

message ListUserRequest {
  string tenant_id = 1;
  int32 page_num = 2;
  int32 page_size = 3;
  string order_by = 4;
  bool is_descending = 5;
  string key_words =6;
}

message ListUserResponse {
  int32 total = 1;
  int32 page_num = 2;
  int32 page_size = 3;
  repeated UserListData users = 4;
}

message UserListData {
  string tenant_id = 1;
  string user_id = 2;
  string external_id = 3;
  string username = 4;
  string email = 5;
  string nick_name = 6;
  string avatar = 7;
  int64 created_at =8;
  repeated UserRole roles=9;
}
message UserRole {
  string id = 1;
  string name =2;
}

message DeleteUserRequest {
  string tenant_id = 1;
  string user_id = 2;
}

message AddTenantPluginRequest {
  string tenant_id = 1;
  AddTenantPluginBody body = 2;
}
message AddTenantPluginBody { string plugin_id = 1; }

message AddTenantPluginResponse { bool ok = 1; }

message ListTenantPluginRequest { string tenant_id = 1; }
message ListTenantPluginResponse { repeated string plugins = 1; }

message DeleteTenantPluginRequest {
  string tenant_id = 1;
  string plugin_id = 2;
}
message DeleteTenantPluginResponse { bool ok = 1; }
message PluginPermissibleRequest {
  string tenant_id = 1;
  string plugin_id = 2;
}
message PluginPermissibleResponse { bool allowed = 1; }

message UpdateUserRequest {
  string tenant_id = 1;
  string user_id = 2;
  UpdateUserBody body =3;
}

message UpdateUserBody {
  string nick_name =1;
  repeated string roles = 2;
}

message UpdateUserResponse {
  bool ok =1;
}

message GetResetPasswordKeyRequest {
  string tenant_id =1;
  string user_id =2;
}

message GetResetPasswordKeyResponse {
  string tenant_id =1;
  string user_id =2;
  string username = 3;
  string nick_name =4;
  string reset_key = 5;
}

message RPKInfoRequest {
  RPKInfoBody body =1;
}

message RPKInfoBody {
  string reset_key =1;
}

message RPKInfoResponse {
  string user_id =1;
  string username =2;
  string nick_name =3;
  string tenant_id =4;
}