apiVersion: v1
kind: ServiceAccount
metadata:
  name: tkeel-manager
  # replace with namespace where provisioner is deployed
  namespace: {{ .Release.Namespace | quote }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tkeel-manager
subjects:
  - kind: ServiceAccount
    name: tkeel-manager
    # replace with namespace where provisioner is deployed
    namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rudder.name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "rudder.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "rudder.name" . }}
  template:
    metadata:
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: {{ include "rudder.name" . | quote }}
        dapr.io/app-port: {{ .Values.appPort | quote }}
        dapr.io/config: {{ .Values.daprConfig }}
      labels:
        app: {{ include "rudder.name" . }}
    spec:
      serviceAccountName: tkeel-manager
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ include "rudder.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.appPort }}
          env:
            - name: TKEEL_DAPR_PRIVATE_STATE_NAME
              value: {{ printf "%s-redis-private-store" .Values.middleware.name }}
            - name: TKEEL_DAPR_PUBLIC_STATE_NAME
              value: {{ printf "%s-redis-public-store" .Values.middleware.name }}
            - name: TKEEL_ADMIN_PASSWD
              value: {{ .Values.adminPassword | quote }}
            - name: TKEEL_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace